input { pipeline { address => edx } }

filter {
    grok {
      match => { "message" => "%{CISCOTIMESTAMP:timestamp} %{GREEDYDATA:os} \[service_variant=%{WORD:service_variant}\]\[%{GREEDYDATA:task}\]\[env:%{GREEDYDATA:env}\] %{LOGLEVEL:level} \[%{GREEDYDATA} %{GREEDYDATA}\] \[%{GREEDYDATA:[file][name]}\:%{NUMBER:[file][line]}\] - %{GREEDYDATA:message}"}
      overwrite => [ "message" ]
    }

    mutate {
      rename => {"@timestamp" => "ingest_time"}
    }

    #"May 20 10:17:06"
    date {
      match => [ "timestamp", "MMM dd HH:mm:ss" ]
    }

    if [task] == "elasticsearch" {
      grok {
        match => { "message" => "%{WORD:[http][request][method]} %{GREEDYDATA:[http][request][url]} \[status\:%{NUMBER:[http][response][status_code]:int} request\:%{NUMBER:[http][request][time]:float}s\]"}
      }
    }

    if [task] == "audit" {
      grok {
        match => { "message" => "Login %{WORD:[login][status]} - user.id: %{USERNAME:[login][user_id]}"}
      }
    }

    if [task] == "openedx.core.djangoapps.content.block_structure.store" {
      grok {
        match => { "message" => "BlockStructure: %{DATA:[block_structure][massage]}; <%{DATA}(>,|>\.)(\s+size\: %{NUMBER:[block_structure][size]:int})?"}
      }
    }
}

output {
  elasticsearch {
    hosts => ["http://192.168.99.101:9200", "http://192.168.99.102:9200"]
    manage_template => false
    index => "edx-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "changeme"
    ecs_compatibility => disabled
  }
}